{
  "resourceType": "Library",
  "meta": {
    "profile": [
      "http://hl7.eu/fhir/ig/gravitate-health/StructureDefinition/lens"
    ]
  },
  "extension": [
    {
      "url": "http://hl7.eu/fhir/ig/gravitate-health/StructureDefinition/lee-version",
      "valueString": "dev"
    }
  ],
  "url": "http://hl7.eu/fhir/ig/gravitate-health/Library/mock-lib",
  "identifier": [
    {
      "system": "http://gravitate-health.lst.tfo.upm.es",
      "value": "rmm-lens"
    }
  ],
  "version": "0.0.1",
  "name": "rmm-lens",
  "date": "2024-07-30T10:17:53.758Z",
  "title": "rmm-lens",
  "status": "draft",
  "experimental": true,
  "type": {
    "coding": [
      {
        "code": "logical-library"
      }
    ]
  },
  "publisher": "Gravitate Health Project - UPM Team",
  "contact": [
    {
      "name": "Gravitate Health",
      "telecom": [
        {
          "system": "url",
          "value": "https://www.gravitatehealth.eu/"
        }
      ]
    }
  ],
  "description": "Lens that aplies RMM to a leaflet",
  "jurisdiction": [
    {
      "coding": [
        {
          "code": "US",
          "system": "urn:iso:std:iso:3166"
        }
      ]
    }
  ],
  "purpose": "Match the RMM of an ePI to a leaflet",
  "usage": "Apply this lens into a leaflet to search for its RMM",
  "copyright": "Â© 2024 Gravitate Health",
  "parameter": [
    {
      "use": "in",
      "documentation": "parameter if it exists",
      "type": "CodeableConcept"
    }
  ],
  "content": [
    {
      "contentType": "application/javascript",
      "data": "bGV0IHB2RGF0YSA9IHB2OwpsZXQgaHRtbERhdGEgPSBodG1sOwoKbGV0IGVwaURhdGEgPSBlcGk7CmxldCBpcHNEYXRhID0gaXBzOwoKbGV0IGdldFNwZWNpZmljYXRpb24gPSAoKSA9PiB7CiAgICByZXR1cm4gIjEuMC4wIjsKfTsKCmxldCBlbmhhbmNlID0gYXN5bmMgKCkgPT4gewogICAgLy8gUHJvdmVzIHRoYXQgSVBTIGV4aXN0cwogICAgbGV0IHJlc3BvbnNlOwoKICAgIGxldCByZXNwb25zZUZldGNoID0gYXdhaXQgZmV0Y2goImh0dHBzOi8vZ3Jhdml0YXRlLWhlYWx0aC5sc3QudGZvLnVwbS5lcy9lcGkvYXBpL2ZoaXIvRG9jdW1lbnRSZWZlcmVuY2UiKQoKICAgIGxldCBsaXN0T2ZTTSA9IGF3YWl0IHJlc3BvbnNlRmV0Y2guanNvbigpOwoKICAgIGNvbnNvbGUubG9nKCJMaXN0IG9mIFNNOiAiLCBsaXN0T2ZTTSkKCiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3RPZlNNLmVudHJ5Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbGV0IHNtID0gbGlzdE9mU00uZW50cnlbaV07CgogICAgICAgIGNvbnNvbGUubG9nKCJTTSBSZWZlcmVuY2U6ICIsIHNtLnJlc291cmNlLnN1YmplY3QucmVmZXJlbmNlKQogICAgICAgIGNvbnNvbGUubG9nKCJFUEkgUmVmZXJlbmNlOiAiLCBlcGkuZW50cnlbMF0ucmVzb3VyY2Uuc3ViamVjdC5yZWZlcmVuY2UpCgogICAgICAgIGlmIChzbS5yZXNvdXJjZS5zdWJqZWN0LnJlZmVyZW5jZSA9PSBlcGkuZW50cnlbMF0ucmVzb3VyY2Uuc3ViamVjdC5yZWZlcmVuY2UpIHsKICAgICAgICAgICAgaWYgKGVwaS5lbnRyeVswXS5yZXNvdXJjZS5zZWN0aW9uWzBdLnNlY3Rpb25bMF0uZXh0ZW5zaW9uID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIGVwaS5lbnRyeVswXS5yZXNvdXJjZS5zZWN0aW9uWzBdLnNlY3Rpb25bMF0uZXh0ZW5zaW9uID0gW107CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGxldCBjb2RlQW5kRGlzcGxheSA9IGdldENvZGVBbmREaXNwbGF5KHNtLnJlc291cmNlLmNvbnRlbnQuYXR0YWNobWVudCk7CgogICAgICAgICAgICBsZXQgbmV3RXh0ZW5zaW9uOwoKICAgICAgICAgICAgaWYgKGNvZGVBbmREaXNwbGF5LmNvZGUuaW5jbHVpZGVzKCJpbmFwcCIpKSB7CiAgICAgICAgICAgICAgICBuZXdFeHRlbnNpb24gPSB7CiAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogInR5cGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVDb2RlYWJsZUNvbmNlcHQ6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2Rpbmc6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3lzdGVtOiAiaHR0cDovL2hsNy5ldS9maGlyL2lnL2dyYXZpdGF0ZS1oZWFsdGgvQ29kZVN5c3RlbS90eXBlLW9mLWRhdGEtY3MiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZTogY29kZUFuZERpc3BsYXkuY29kZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGNvZGVBbmREaXNwbGF5LmRpc3BsYXkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogImNvbmNlcHQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVCYXNlNjRCaW5hcnk6IHNtLnJlc291cmNlLmNvbnRlbnRbMF0uYXR0YWNobWVudC5kYXRhCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIHVybDogImh0dHA6Ly9obDcuZXUvZmhpci9pZy9ncmF2aXRhdGUtaGVhbHRoL1N0cnVjdHVyZURlZmluaXRpb24vQWRkaXRpb25hbEluZm9ybWF0aW9uIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgbmV3RXh0ZW5zaW9uID0gewogICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvbjogWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6ICJ0eXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlQ29kZWFibGVDb25jZXB0OiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kaW5nOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN5c3RlbTogImh0dHA6Ly9obDcuZXUvZmhpci9pZy9ncmF2aXRhdGUtaGVhbHRoL0NvZGVTeXN0ZW0vdHlwZS1vZi1kYXRhLWNzIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGU6IGNvZGVBbmREaXNwbGF5LmNvZGUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBjb2RlQW5kRGlzcGxheS5kaXNwbGF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHNtLnJlc291cmNlLmNvbnRlbnRbMF0uYXR0YWNobWVudC51cmwKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgdXJsOiAiaHR0cDovL2hsNy5ldS9maGlyL2lnL2dyYXZpdGF0ZS1oZWFsdGgvU3RydWN0dXJlRGVmaW5pdGlvbi9BZGRpdGlvbmFsSW5mb3JtYXRpb24iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGVwaS5lbnRyeVswXS5yZXNvdXJjZS5zZWN0aW9uWzBdLnNlY3Rpb25bMF0uZXh0ZW5zaW9uLnB1c2gobmV3RXh0ZW5zaW9uKTsKICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuIHJlc3BvbnNlCgp9OwoKZ2V0Q29kZUFuZERpc3BsYXkgPSAoZGF0YSkgPT4gewogICAgaWYgKGRhdGEuY29udGVudFR5cGUgPT09ICJ0ZXh0L2h0bWwiKSB7CiAgICAgICAgaWYgKGRhdGEuZHVyYXRpb24pIHsKICAgICAgICAgICAgaWYgKGRhdGEudXJsLmNvbnRhaW5zKCJ5b3V0dWJlIikpIHsKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgY29kZTogInZpZGVvLWluYXBwIiwKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAiVklERU8iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIGNvZGU6ICJhdWRpby1pbmFwcCIsCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogIkFVRElPIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBjb2RlOiAiaW1hZ2UtaW5hcHAiLAogICAgICAgICAgICAgICAgZGlzcGxheTogIklNRyIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgICAgc3dpdGNoIChkYXRhLmNvbnRlbnRUeXBlKSB7CiAgICAgICAgICAgIGNhc2UgInZpZGVvL21wNCI6CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIGNvZGU6ICJ2aWRlbyIsCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogIlZJREVPIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBjYXNlICJhdWRpby9tcGVnIjoKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgY29kZTogImF1ZGlvIiwKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAiQVVESU8iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGNhc2UgImltYWdlL2pwZyI6CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIGNvZGU6ICJpbWFnZSIsCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogIklNRyIKICAgICAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0KCgpyZXR1cm4gewogICAgZW5oYW5jZTogZW5oYW5jZSwKICAgIGdldFNwZWNpZmljYXRpb246IGdldFNwZWNpZmljYXRpb24sCn07"
    }
  ]
}